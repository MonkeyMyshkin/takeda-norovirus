%script for handling Korean social contact data

%clear all
load('data/Korean_Contact_Survey.mat')   %this is the extracted data from https://doi.org/10.3886/ICPSR35335.v1
maxAge=76;                          %set maximum age +1 for MATLAB indexing
IndexMat=[2:10;1,3:10;1:2,4:10;1:3,5:10;1:4,6:10;1:5,7:10;1:6,8:10;1:7,9:10;1:8,10;1:9];
                                    %handy indexing for each household
                                    %member contacts
                                    
load('data/M.mat')   %population sizes for Korea
N=M(1:maxAge-1);
N(maxAge)=sum(M(maxAge:end));
M=N;

HOUSEHOLD=[AGE,OLD2,OLD3,OLD4,OLD5,OLD6,OLD7,OLD8,OLD9,OLD10];  %collect age of respondant and age of 10 additional household members

for HouseholdMemberIndex=1:10   %for each particular household member, construct individual contact matrix
    
    subplot(2,5,HouseholdMemberIndex)
    [SortedAges,SortedID]=sort(HOUSEHOLD(:,HouseholdMemberIndex),'ascend'); %sort for that household member
    
    
    
    HOUSEHOLD=HOUSEHOLD(SortedID,:);    %structure other household members accordingly
    HOUSEHOLD(HOUSEHOLD>110)=nan;       %ignore refusal codes
    
    AwayMat=[AWAY,AWAY2,AWAY3,AWAY4,AWAY5,AWAY6,AWAY7,AWAY8,AWAY9,AWAY10];  %check that those household members live together
    AwayMat=AwayMat(SortedID,:);
    AwayMat(AwayMat>1)=nan;     %index is 1 if individuals live together, 2 else
    
    
    AGEOFCONTACTS=zeros(1396,1001);
    
    
    for j=IndexMat(HouseholdMemberIndex,:)  %collect numbers of contacts from each age group assuming individuals live together
        for i=1:1396
            if AwayMat(i,j)==1 && isnan(HOUSEHOLD(i,j))==0
                AGEOFCONTACTS(i,1+HOUSEHOLD(i,j))=AGEOFCONTACTS(i,1+HOUSEHOLD(i,j))+1;
            end
        end
    end
    
    AGEOFCONTACTS=AGEOFCONTACTS(:,1:101);   %ignore dont know/ reused to answer values which were coded as 888 or 1000
    
    clear AveContacts
    
    %scaleby the number of participants of each age to arrive at a mean
    %number of contacts
    for i=1:maxAge-1
        indices=find(SortedAges==i);
        T(i)=length(indices);
        if T(i)>0
            AveContacts(i,:)=nansum(AGEOFCONTACTS(indices,:),1)/T(i);
        end
    end
    index=find(SortedAges==maxAge,1);
    T(maxAge)=length(AGEOFCONTACTS(index:end,1));
    AveContacts(maxAge,:)=nansum(AGEOFCONTACTS(index:end,:))/T(maxAge);
    
    %collect agegroups above maxage into one 75+ category
    OlderAgeGroup=nansum(AveContacts(:,maxAge:end),2);
    AveContacts=[AveContacts(:,1:maxAge-1),OlderAgeGroup];
    
    
    %Eames symmetry for recipricol contacts in the population
    
    for i=1:maxAge
        for j=1:maxAge
            
            eames(i,j)=(M(i)*AveContacts(i,j) + M(j) *AveContacts(j,i))/(2*M(i));
            
        end
    end
    
    
    x={linspace(0,maxAge,maxAge),linspace(0,maxAge,maxAge)};
    
    imagesc(AveContacts); view(-90, 90)
    CONTACTMATRIX(:,:,HouseholdMemberIndex)=AveContacts;
end

CONTACTMATRIX(1:18,:,1)=nan;    %remove respondant entries under 18 as no respondant was allowed to be less than 18 years old

contact= nanmean(CONTACTMATRIX,3);  %take average contacts for each average participant omitting young respondant entries as above
for i=1:maxAge
    for j=1:maxAge
        %symmetrise new average matris
        eames(i,j)=(M(i)*contact(i,j) + M(j) *contact(j,i))/(2*M(i));
        
    end
end


x={linspace(0,maxAge,maxAge),linspace(0,maxAge,maxAge)};
figure
%smooth with a cubic smoothing spline
KoreanContact=abs(csaps(x,eames,0.05,x));
for i=1:maxAge
    KoreanContact(i,:)=KoreanContact(i,:)/M(i);
end
imagesc(KoreanContact); view(-90, 90)
